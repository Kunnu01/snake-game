{"version":3,"sources":["Components/Snake/Snake.module.css","Components/Food/Food.module.css","Components/Snake/Snake.js","Components/Food/Food.js","libs/utils.js","Pages/PlayGame/PlayGame.js","Pages/MainPage/Mainpage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Snake_dot","Snake_food","rotate","rotation","Snake","props","snakeBlocks","react_default","a","createElement","map","dot","index","style","left","concat","top","className","classes","key","Food","background","color","getRandomCoordinates","Math","floor","random","initialState","level","direction","speed","score","arcadeHighestScore","localStorage","classicHighestScore","food","bonusFood","gameOver","classic","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onKeyDown","e","window","event","state","keyCode","setState","checkLevel","moveSnake","_this$state","dots","toConsumableArray","head","length","push","shift","generateFood","snake","forEach","checkHighScore","_this$state2","renderGameOver","display","flexDirection","position","marginTop","justifyContent","fontSize","onClick","onGameOver","match","params","mode","interval","setInterval","document","onkeydown","clearInterval","checkIfOutOfBorders","checkIfCollapsed","checkIfEat","i","_this$state3","shortenSnake","enlargeSnake","_this2","_this$state4","enlargedSnake","unshift","_this3","_this$state5","pop","_this$state6","_this$state7","setItem","_this$state8","Fragment","Components_Snake_Snake","Components_Food_Food","margin","width","Component","Mainpage","history","react_router_dom","react_router","path","component","PlayGame","MainPage","Boolean","location","hostname","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4c716e50.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Snake_dot\":\"Snake_Snake_dot__30Fav\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Snake_food\":\"Food_Snake_food__2i1Lt\",\"rotate\":\"Food_rotate__3lwpo\",\"rotation\":\"Food_rotation__1J3y1\"};","import React from 'react';\nimport classes from './Snake.module.css';\n\nconst Snake = (props) => {\n    const { snakeBlocks } = props;\n    return (\n        <div>\n            {snakeBlocks.map((dot, index) => {\n                const style = {\n                    left: `${dot[0]}%`,\n                    top: `${dot[1]}%`,\n                }\n                return (\n                    <div className={classes.Snake_dot} key={index} style={style}></div>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default Snake;","import React from 'react'\nimport classes from './Food.module.css';\n\nconst Food = (props) => {\n    const style = {\n        background: `${props.color}`,\n        left: `${props.dot[0]}%`,\n        top: `${props.dot[1]}%`,\n    }\n    return (\n        <div className={classes.Snake_food} style={style}></div>\n    )\n}\n\nexport default Food;","export const getRandomCoordinates = () => {\n    let min = 1;\n    let max = 98;\n    let x = Math.floor((Math.random()*(max-min+1)+min)/2)*2;\n    let y = Math.floor((Math.random()*(max-min+1)+min)/2)*2;\n    return [x,y];\n}","/* eslint-disable default-case */\nimport React, {Component} from 'react';\nimport { Snake, Food } from '../../Components';\nimport { getRandomCoordinates }  from '../../libs/utils';\n\nconst incrementByValueOne = 1;\nconst initialState = {\n  level: 'Noob',\n  direction: 'Right',\n  speed: 200,\n  score: 0,\n  arcadeHighestScore: localStorage.arcadeHighestScore || 0,\n  classicHighestScore: localStorage.classicHighestScore || 0, \n  food: getRandomCoordinates(),\n  bonusFood: [-2, -2],\n  snakeBlocks: [\n    [0,0],\n    [2,0],\n    [4,0],\n    [6,0],\n    [8,0],\n    [10,0]\n  ],\n  gameOver: false,\n  classic: false,\n}\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n  }\n\n  componentWillMount() {\n      const { mode } = this.props.match.params;\n      if (mode === 'classic') {\n          this.setState({\n              classic: true,\n          })\n      }\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(this.moveSnake, this.state.speed);\n    document.onkeydown = this.onKeyDown;\n  }\n\n  componentWillUnmount() {\n    // localStorage.removeItem('classicHighestScore', 'arcadeHighestScore');\n    clearInterval(this.interval);\n  }\n\n  componentDidUpdate() {\n    const { score } = this.state;\n    this.checkIfOutOfBorders();\n    this.checkIfCollapsed();\n    this.checkIfEat();\n    this.checkHighScore();\n    if (score%2 === 0) {\n      clearInterval(this.interval);\n      this.interval = setInterval(this.moveSnake, this.state.speed);\n    }\n  }\n\n  onKeyDown = (e) => {\n    e = e || window.event;\n    const { direction } = this.state;\n\n    switch (e.keyCode) {\n      case 38:\n        if (direction !== 'Down')\n          this.setState({direction: 'Up'});\n        break;\n      case 40:\n        if (direction !== 'Up')\n          this.setState({direction: 'Down'});\n        break;\n      case 37:\n        if (direction !== 'Right')\n          this.setState({direction: 'Left'});\n        break;\n      case 39:\n        if (direction !== 'Left')\n          this.setState({direction: 'Right'});\n        break;\n    }\n  }\n\n  checkLevel = () => {\n    const { score } = this.state;\n\n    if (score >= 20) {\n      this.setState({level: 'Veteran'})\n    } else if (score >= 15) {\n      this.setState({level: 'Expert'})\n    } else if (score >= 10) {\n      this.setState({level: 'Amateur'})\n    } else if (score >= 5) {\n      this.setState({level: 'Beginner'})\n    }\n  }\n\n  shortenSnake() {\n    const { snakeBlocks } = this.state;\n\n  for (let i = 0; i <= 2; i++) {\n      snakeBlocks.shift();\n  }\n  this.setState({snakeBlocks});\n  }\n\n  moveSnake = () => {\n    const { snakeBlocks, direction } = this.state;\n    let dots = [...snakeBlocks];\n    let head = dots[dots.length - 1];\n\n    switch(direction) {\n      case 'Right':\n        head = [head[0]+2, head[1]];\n        break;\n      case 'Left':\n        head = [head[0]-2, head[1]];\n        break;\n      case 'Down':\n        head = [head[0], head[1]+2];\n        break;\n      case 'Up':\n        head = [head[0], head[1]-2];\n        break;\n    }\n    dots.push(head);\n    dots.shift();\n    this.setState({\n      snakeBlocks: dots,\n    })\n  }\n\n  generateFood = () => {\n    const { snakeBlocks } = this.state;\n    const snake = [...snakeBlocks];\n    let food = getRandomCoordinates();\n    snake.forEach(dot => {\n      if(food[0] === dot[0] && food[1] === dot[1]) {\n        food = getRandomCoordinates();\n      }\n    });\n    return food;\n  }\n\n  checkIfEat() {\n    const { snakeBlocks, food, bonusFood, score } = this.state;\n    let head = snakeBlocks[snakeBlocks.length - 1];\n    if (head[0] === bonusFood[0] && head[1] === bonusFood[1]) {\n      this.setState({\n        bonusFood: [-2, -2],\n        score: score+3,\n      });\n      this.shortenSnake()\n    }\n    if (head[0] === food[0] && head[1] === food[1]) {\n      this.setState({\n        food: this.generateFood(),\n      });\n      this.enlargeSnake();\n    }\n  }\n\n  enlargeSnake() {\n    const { snakeBlocks, score, speed } = this.state;\n    let enlargedSnake = [...snakeBlocks];\n    enlargedSnake.unshift([]);\n    this.setState({\n      snakeBlocks: [...enlargedSnake],\n      speed: (speed>30 && score%2===0) ? speed-10 : speed,\n      score: score+1,\n      bonusFood: ((score+incrementByValueOne)>2 && (score+incrementByValueOne)%10===0) ? this.generateFood() : [-2, -2],\n    }, () => this.checkLevel());\n  }\n  \n  checkIfCollapsed() {\n    const { snakeBlocks, gameOver } = this.state;\n    let snake = [...snakeBlocks];\n    let head = snake[snake.length - 1];\n    snake.pop();\n    snake.forEach(dot => {\n      if (head[0] === dot[0] && head[1] === dot[1]) {\n        // this.onGameOver();\n        if(!gameOver)\n        this.setState({\n          gameOver: true,\n        })\n      }\n    })\n  }\n\n  checkIfOutOfBorders() {\n    const { snakeBlocks, direction, classic, gameOver } = this.state;\n    let dots = [...snakeBlocks];\n    let head = dots[dots.length - 1];\n\n    // let head = snakeBlocks[snakeBlocks.length-1];\n    if (head[0] >= 100 || head[1] >= 100 || head[0] < 0 || head[1] < 0) {\n      if (!classic) {\n        if (!gameOver) {\n          this.setState({\n            gameOver: true,\n          });\n        }\n        return;\n      }\n\n      if (direction === 'Right') {\n        head = [head[0]-100, head[1]];\n      } else if (direction === 'Left') {\n        head = [head[0]+100, head[1]];\n      } else if (direction === 'Down') {\n        head = [head[0], head[1]-100];\n      } else if (direction === 'Up') {\n        head = [head[0], head[1]+100];\n      }\n\n      dots.push(head);\n      dots.shift();\n      this.setState({\n        snakeBlocks: dots,\n      })\n    }\n  }\n\n  checkHighScore = () => {\n    const { score, classicHighestScore, arcadeHighestScore, classic } = this.state;\n    if (classic) {\n      if (score > classicHighestScore) {\n        this.setState({\n          classicHighestScore: score,\n        })\n      }\n    }\n\n    if (!classic) {\n      if (score > arcadeHighestScore) {\n        this.setState({\n          arcadeHighestScore: score,\n        })\n      }\n    }\n  }\n\n  onGameOver() {\n    const { classicHighestScore, arcadeHighestScore, classic } = this.state;\n    if (classic) {\n      localStorage.setItem('classicHighestScore', classicHighestScore);\n    } else {\n      localStorage.setItem('arcadeHighestScore', arcadeHighestScore);\n    }\n    this.setState(initialState);\n  }\n\n  renderGameOver = () => {\n    if (!this.state.gameOver) {\n      return null;\n    }\n    return (\n      <div style={{display: 'flex', flexDirection: 'column',color: 'white', position: 'relative', marginTop: '30%'}}>\n        <h1 style={{ display: 'flex', justifyContent: 'space-around', color: '#53f6c7', fontSize: '3rem'}}>Game Over</h1>\n        <div style={{display: 'flex', justifyContent: 'space-around'}}>\n          <button className=\"ModeButton\" onClick={() => {\n              this.setState({classic: false});\n              this.onGameOver();\n            }}\n          >\n            Arcade\n          </button>\n          <button className=\"ModeButton\" onClick={() => {\n              this.onGameOver();\n              this.setState({classic: true});\n            }}\n          >\n            Classic\n          </button>\n        </div>\n      </div>\n    )\n  }\n\n  render() {\n    const { snakeBlocks, food, bonusFood, score, classicHighestScore, arcadeHighestScore, level, gameOver, classic } = this.state;\n    \n    return (\n      <>\n        <div className=\"game-area\">\n          {!gameOver\n            ? (\n              <>\n                <Snake snakeBlocks={snakeBlocks} />\n                <Food dot={food} color=\"red\" />\n                {(score%10===0 && score>2) ? <Food color=\"yellow\" dot={bonusFood} /> : null}\n              </>\n            )\n            : this.renderGameOver()\n            }\n        </div>\n        <div style={{color: '#53f6c7', position: 'relative', margin: '2px auto', width: '500px', display: 'flex', justifyContent: 'space-between'}}>\n          <h3>Score: {score}</h3>\n          <h3>High Score: {classic ? classicHighestScore : arcadeHighestScore}</h3>\n          <h3>Level: {level}</h3>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\n\nconst Mainpage = (props) => {\n\n    const handleArcadeMode = () => {\n        props.history.push('/play/arcade');\n    }\n\n    const handleClassicMode = () => {\n        props.history.push('/play/classic');\n    }\n    \n    return (\n        <div className=\"game-area\">\n            <div style={{display: 'flex', flexDirection: 'column',color: 'white', position: 'relative', marginTop: '30%'}}>\n                <h1 style={{ display: 'flex', justifyContent: 'space-around', color: '#53f6c7', fontSize: '3rem'}}>\n                    Play Game\n                </h1>\n                <div style={{display: 'flex', justifyContent: 'space-around'}}>\n                    <button className=\"ModeButton\" onClick={handleArcadeMode}>\n                        Arcade\n                    </button>\n                    <button className=\"ModeButton\" onClick={handleClassicMode}>\n                        Classic\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Mainpage;","import React, { Component } from 'react';\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\nimport { PlayGame, MainPage } from './Pages';\n\nclass App extends Component {\n  render () {\n    return (\n      <div>\n        <BrowserRouter>        \n          <Switch>\n            <Route path={`/play/:mode`} component={PlayGame} />\n            <Route path=\"/\" component={MainPage} />\n          </Switch>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}