{"version":3,"sources":["Components/Snake/Snake.module.css","Components/Food/Food.module.css","Components/Modal/Modal.module.css","Components/BackDrop/BackDrop.module.css","Components/Button/Button.module.css","Components/Auth/InputTextField/InputTextField.module.css","Components/Auth/Register/Register.module.css","Components/Auth/Login/Login.module.css","Components/NavBar/NavBar.module.css","Layout/Layout.module.css","Components/Snake/Snake.js","Components/Food/Food.js","Components/BackDrop/BackDrop.js","Components/Modal/Modal.js","Components/Button/Button.js","Components/Auth/InputTextField/InputTextField.js","axios.js","Components/Auth/Register/Register.js","Components/Auth/Login/Login.js","Components/NavBar/NavBar.js","libs/utils.js","constants.js","Pages/PlayGame/Utils/Snake.js","Pages/PlayGame/Utils/Food.js","Pages/PlayGame/Utils/GameRules.js","Layout/Layout.js","Pages/PlayGame/PlayGame.js","Pages/MainPage/Mainpage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Snake_dot","Snake_food","rotate","rotation","Modal","BackDrop","Button","InputTextField","Register","Login","NavBar","Content","Snake","props","snakeBlocks","react_default","a","createElement","map","dot","index","style","left","concat","top","className","classes","key","Food","background","color","show","onClick","clicked","styles","shouldComponentUpdate","nextProps","nextState","_this","children","Fragment","Components_BackDrop_BackDrop","this","modalClosed","transform","opacity","Component","rest","Object","objectWithoutProperties","assign","instance","axios","create","baseURL","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","alreadyExists","_ref","asyncToGenerator","regenerator_default","mark","_callee","email","res","fetchedUsers","wrap","_context","prev","next","get","sent","data","push","objectSpread","id","find","user","abrupt","t0","stop","_x","apply","arguments","handleSubmit","_callee2","_this$state","name","password","_context2","setState","isLoading","state","alert","post","then","catch","err","handleOnChange","field","event","defineProperty","target","value","_this$state2","Auth_InputTextField_InputTextField","type","placeholder","onChange","Components_Button_Button","disabled","checkCredentials","localStorage","setItem","_x2","display","justifyContent","handleModalOpen","handleModalClose","register","login","leaderBoard","handleLogout","removeItem","renderForm","Auth_Login_Login","Auth_Register_Register","renderLeaderBoard","renderAuthOptions","getItem","cursor","marginLeft","Components_Modal_Modal","getRandomCoordinates","Math","floor","random","primaryKeys","UP","DOWN","LEFT","RIGHT","secondaryKeys","incrementByValueOne","moveSnake","that","_that$state","direction","dots","toConsumableArray","head","length","shift","generateFood","snake","food","forEach","checkIfEat","bonusFood","score","i","shortenSnake","_that$state2","speed","enlargedSnake","unshift","level","checkLevel","enlargeSnake","Layout","Components_NavBar_NavBar","initialState","arcadeHighestScore","classicHighestScore","gameOver","classic","App","renderGameOver","flexDirection","position","marginTop","fontSize","onGameOver","match","params","mode","_this2","interval","setInterval","window","onkeydown","e","keyCode","onKeyDown","clearInterval","_this3","flag","checkIfOutOfBorders","_that$state3","pop","checkIfCollapsed","_that$state4","checkHighScore","src_Layout_Layout","Components_Snake_Snake","Components_Food_Food","margin","width","Mainpage","history","react_router_dom","react_router","path","component","PlayGame","MainPage","Boolean","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.68fac32f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Snake_dot\":\"Snake_Snake_dot__30Fav\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Snake_food\":\"Food_Snake_food__2i1Lt\",\"rotate\":\"Food_rotate__3lwpo\",\"rotation\":\"Food_rotation__1J3y1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__3ihEg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BackDrop\":\"BackDrop_BackDrop__1WDul\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__HOrbw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputTextField\":\"InputTextField_InputTextField__3_wPH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Register\":\"Register_Register__2UOSc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__1D3NE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavBar\":\"NavBar_NavBar__2ZZgr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__dWw14\"};","import React from 'react';\nimport classes from './Snake.module.css';\n\nconst Snake = (props) => {\n    const { snakeBlocks } = props;\n    return (\n        <div>\n            {snakeBlocks.map((dot, index) => {\n                const style = {\n                    left: `${dot[0]}%`,\n                    top: `${dot[1]}%`,\n                }\n                \n                return (\n                    <div className={classes.Snake_dot} key={index} style={style}></div>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default Snake;","import React from 'react'\nimport classes from './Food.module.css';\n\nconst Food = (props) => {\n    const style = {\n        background: `${props.color}`,\n        left: `${props.dot[0]}%`,\n        top: `${props.dot[1]}%`,\n    }\n    return (\n        <div className={classes.Snake_food} style={style}></div>\n    )\n}\n\nexport default Food;","import React from 'react';\nimport styles from './BackDrop.module.css';\n\nconst BackDrop = (props) => (\n    props.show ? <div onClick={props.clicked} className={styles.BackDrop}></div> : null\n);\n\nexport default BackDrop;","import React, { Component } from 'react';\nimport styles from './Modal.module.css';\nimport BackDrop from '../BackDrop/BackDrop';\n\nclass Modal extends Component {\n    shouldComponentUpdate = (nextProps, nextState) => {\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\n    }\n\n    render() {\n        return(\n            <>\n                <BackDrop show={this.props.show} clicked= {this.props.modalClosed} />\n                <div\n                    className={styles.Modal}\n                    style={{\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                        opacity: this.props.show ? '1' : '0',\n                    }}\n                >\n                    {this.props.children}\n                </div>\n            </>\n        )\n    }\n}\n\nexport default Modal;","import React from 'react';\nimport styles from './Button.module.css';\n\nconst Button = (props) => {\n    const { onClick, ...rest } = props;\n    return (\n        <div>\n            <button className={styles.Button} onClick={onClick} {...rest}>\n                {props.children}\n            </button>\n        </div>\n    );\n};\n\nexport default Button;","import React from 'react';\nimport styles from './InputTextField.module.css';\n\nconst InputTextField = (props) => {\n    return (\n        <input className={styles.InputTextField}  {...props} />\n    );\n};\n\nexport default InputTextField;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://snake-game-9529f.firebaseio.com/'\n});\n\nexport default instance;","import React, { Component } from 'react';\nimport Button from '../../Button/Button';\nimport InputTextField from '../InputTextField/InputTextField';\nimport styles from './Register.module.css';\nimport axios from '../../../axios';\n\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            name: '',\n            password: '',\n            isLoading: false,\n        }\n    }\n\n    alreadyExists = async (email) => {\n        try {\n            const res = await axios.get('users.json')\n            const fetchedUsers = [];\n            for (let key in res.data) {\n                fetchedUsers.push({\n                    ...res.data[key],\n                    id: key\n                });\n            }\n            const user = fetchedUsers.find(user => user.email === email);\n            if(user) {\n                return true;\n            }\n            return false;\n        } catch (error) {\n            throw error;\n        }\n    }\n\n    handleSubmit = async () => {\n        this.setState({isLoading: true});\n        const { modalClosed } = this.props;\n        const { email, name, password } = this.state;\n        const data = { email, name, password };\n        const user  = await this.alreadyExists(email);\n        if (user) {\n            alert('User already exists');\n            modalClosed();\n            return;\n        }\n        axios.post('users.json', data)\n            .then(res => {\n                this.setState({isLoading: false})\n                modalClosed();\n            })\n            .catch(err => {\n                this.setState({isLoading: false})\n                modalClosed();\n            });\n    }\n\n    handleOnChange = (field) => (event) => {\n        this.setState({\n            [field]: event.target.value,\n        })\n    }\n    \n    render() {\n        const { email, name, password, isLoading } = this.state;\n        \n        return (\n            <div className={styles.Register}>\n                <h1>Register</h1>\n                <InputTextField\n                    type=\"text\"\n                    name=\"email\"\n                    placeholder=\"Email\"\n                    value={email}\n                    onChange={this.handleOnChange('email')}\n                />\n                <InputTextField\n                    type=\"text\"\n                    name=\"name\"\n                    placeholder=\"Name\"\n                    value={name}\n                    onChange={this.handleOnChange('name')}\n                />\n                <InputTextField\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"password\"\n                    value={password}\n                    onChange={this.handleOnChange('password')}\n                />\n                <Button onClick={this.handleSubmit} disabled={isLoading}>\n                    { isLoading ? 'Loading...' : 'Register'}\n                </Button>\n            </div>\n        );\n    }\n}\n\nexport default Register;;","import React, { Component } from 'react';\nimport Button from '../../Button/Button';\nimport InputTextField from '../InputTextField/InputTextField';\nimport axios from '../../../axios';\nimport styles from './Login.module.css';\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            isLoading: false,\n        }\n    }\n\n    checkCredentials = async (email, password) => {\n        try {\n            this.setState({isLoading: true});\n            const res = await axios.get('users.json');\n            const fetchedUsers = [];\n            for (let key in res.data) {\n                fetchedUsers.push({\n                    ...res.data[key],\n                    id: key\n                });\n            }\n            const user = fetchedUsers.find(user => user.email === email);\n            if (!user) {\n                alert('User does not exists');\n                return false;\n            } else if (user.password !== password) {\n                alert('Incorrect Password');\n                return false;\n            } else {\n                localStorage.setItem('user', user);\n                return true;\n            }\n        } catch(error) {\n            throw error;\n        }\n    }\n\n    handleSubmit = async () => {\n        const { modalClosed } = this.props;\n        const { email, password } = this.state;\n        await this.checkCredentials(email, password)\n        this.setState({isLoading: false});\n        modalClosed();\n    }\n\n    handleOnChange = (field) => (event) => {\n        this.setState({\n            [field]: event.target.value,\n        })\n    }\n\n    render() {\n        const { isLoading } = this.state;\n        return (\n            <div className={styles.Login}>\n                <h1>Login</h1>\n                <InputTextField\n                    type=\"text\"\n                    name=\"email\"\n                    placeholder=\"Email\"\n                    onChange={this.handleOnChange('email')}\n                />\n                <InputTextField\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"password\"\n                    onChange={this.handleOnChange('password')}\n                />\n                <Button onClick={this.handleSubmit}>\n                    { isLoading ? 'Loading...' : 'Login'}\n                </Button>\n            </div>\n        );\n    }\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport { Modal, Register, Login } from '../../Components';\nimport styles from './NavBar.module.css';\n\nconst style = {\n    display: 'flex',\n    justifyContent: 'space-between',\n}\n\nclass NavBar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            register: false,\n            login: false,\n            leaderBoard: false,\n        }\n    }\n\n    handleModalOpen = (name) => {\n        this.setState({\n            [name]: true,\n        });\n    }\n\n    handleModalClose = () => {\n        this.setState({\n            register: false,\n            login: false,\n            leaderBoard: false,\n        });\n    }\n\n    handleLogout = () => {\n        localStorage.removeItem('user');\n    }\n\n    renderForm = () => {\n        const { login, register } = this.state;\n\n        if (login)\n            return <Login modalClosed={() => this.handleModalClose('login')} />;\n        else if (register)\n            return <Register modalClosed={() => this.handleModalClose('register')} />;\n        \n        return null;\n    }\n\n    renderLeaderBoard = () => {\n        const { leaderBoard } = this.state;\n        if (leaderBoard) {\n            return <h2>Coming Soon</h2>\n        }\n\n        return null;\n    }\n\n    renderAuthOptions = () => {\n        const user = localStorage.getItem('user');\n        if (!user) {\n            return (\n                <>\n                    <h2 style={{cursor: 'pointer', marginLeft: '20px'}} onClick={() => this.handleModalOpen('register')}>Register</h2>\n                    <h2 style={{cursor: 'pointer', marginLeft: '20px'}} onClick={() => this.handleModalOpen('login')}>Login</h2>\n                </>\n            )\n        }\n        else {\n            return (\n                <>\n                    <h2 style={{cursor: 'pointer', marginLeft: '20px'}} onClick={() => this.handleModalOpen('leaderBoard')}>LeaderBoard</h2>\n                    <h2 style={{cursor: 'pointer', marginLeft: '20px'}} onClick={this.handleLogout}>Logout</h2>\n                </>\n            )\n        }\n    }\n\n    render() {\n        const { register, login, leaderBoard } = this.state;\n        \n\n        return (\n            <div>\n                <nav className={styles.NavBar}>\n                    <h2 style={{cursor: 'pointer'}}>Snake Game</h2>\n                    <div style={style}>\n                        <Modal show={register || login} modalClosed={this.handleModalClose}>\n                            {this.renderForm()}\n                        </Modal>\n                        <Modal show={leaderBoard} modalClosed={this.handleModalClose}>\n                            {this.renderLeaderBoard()}\n                        </Modal>\n                        {this.renderAuthOptions()}\n                    </div>\n                </nav>\n            </div>\n        );\n    }\n};\n\nexport default NavBar;","export const getRandomCoordinates = () => {\n    let min = 1;\n    let max = 98;\n    let x = Math.floor((Math.random()*(max-min+1)+min)/2)*2;\n    let y = Math.floor((Math.random()*(max-min+1)+min)/2)*2;\n    return [x,y];\n}","/* eslint-disable import/prefer-default-export */\n//Arrow keys\nexport const primaryKeys = {\n    'UP': 38,\n    'DOWN': 40,\n    'LEFT': 37,\n    'RIGHT': 39\n}\n  \n// wsad\nexport const secondaryKeys = {\n    'UP': 87,\n    'DOWN': 83,\n    'LEFT': 65  ,\n    'RIGHT': 68\n}\n  ","/* eslint-disable default-case */\nimport { generateFood } from './Food';\nimport { checkLevel } from './GameRules';\nimport { primaryKeys, secondaryKeys } from '../../../constants';\n\nconst incrementByValueOne = 1;\n\nexport function onKeyDown(e, that) {\n  e = e || window.event;\n  const { direction } = that.state;\n\n  switch (e.keyCode) {\n    case primaryKeys.UP:\n      if (direction !== 'Down' && direction !== 'Up')\n        that.setState({direction: 'Up'});\n      break;\n    case secondaryKeys.UP:\n      if (direction !== 'Down' && direction !== 'Up')\n        that.setState({direction: 'Up'});\n      break;\n    case primaryKeys.DOWN:\n      if (direction !== 'Up' && direction !== 'Down')\n        that.setState({direction: 'Down'});\n      break;\n    case secondaryKeys.DOWN:\n      if (direction !== 'Up' && direction !== 'Down')\n        that.setState({direction: 'Down'});\n      break;\n    case primaryKeys.LEFT:\n      if (direction !== 'Right' && direction !== 'Left')\n        that.setState({direction: 'Left'});\n      break;\n    case secondaryKeys.LEFT:\n      if (direction !== 'Right' && direction !== 'Left')\n        that.setState({direction: 'Left'});\n      break;\n    case primaryKeys.RIGHT:\n      if (direction !== 'Left' && direction !== 'Right')\n        that.setState({direction: 'Right'});\n      break;\n    case secondaryKeys.RIGHT:\n      if (direction !== 'Left' && direction !== 'Right')\n        that.setState({direction: 'Right'});\n      break;\n  }\n}\n\nexport function moveSnake(that) {\n    const { snakeBlocks, direction } = that.state;\n    let dots = [...snakeBlocks];\n    let head = dots[dots.length - 1];\n\n    switch(direction) {\n      case 'Right':\n        head = [head[0]+2, head[1]];\n        break;\n      case 'Left':\n        head = [head[0]-2, head[1]];\n        break;\n      case 'Down':\n        head = [head[0], head[1]+2];\n        break;\n      case 'Up':\n        head = [head[0], head[1]-2];\n        break;\n    }\n    dots.push(head);\n    dots.shift();\n    that.setState({\n      snakeBlocks: dots,\n    })\n  }\n\nexport function enlargeSnake(that) {\n    const { snakeBlocks, score, speed } = that.state;\n    let enlargedSnake = [...snakeBlocks];\n    enlargedSnake.unshift([]);\n    that.setState({\n      snakeBlocks: [...enlargedSnake],\n      speed: (speed>30 && score%2===0) ? speed-10 : speed,\n      score: score+1,\n      bonusFood: ((score+incrementByValueOne)>2 && (score+incrementByValueOne)%10===0) ? generateFood(that) : [-2, -2],\n    }, () => checkLevel(that));\n}\n\nexport function shortenSnake(that) {\n    const { snakeBlocks } = that.state;\n\n  for (let i = 0; i <= 2; i++) {\n      snakeBlocks.shift();\n  }\n  that.setState({snakeBlocks});\n}","import {getRandomCoordinates} from '../../../libs/utils';\nimport { enlargeSnake, shortenSnake } from './Snake';\n\nexport function  generateFood(that) {\n    const { snakeBlocks } = that.state;\n    const snake = [...snakeBlocks];\n    let food = getRandomCoordinates();\n    snake.forEach(dot => {\n      if(food[0] === dot[0] && food[1] === dot[1]) {\n        food = getRandomCoordinates();\n      }\n    });\n    return food;\n}\n\nexport function checkIfEat(that) {\n    const { snakeBlocks, food, bonusFood, score } = that.state;\n    let head = snakeBlocks[snakeBlocks.length - 1];\n    if (head[0] === bonusFood[0] && head[1] === bonusFood[1]) {\n      that.setState({\n        bonusFood: [-2, -2],\n        score: score+3,\n      });\n      shortenSnake(that);\n    }\n    if (head[0] === food[0] && head[1] === food[1]) {\n      that.setState({\n        food: generateFood(that),\n      });\n      enlargeSnake(that);\n    }\n}","export function checkIfOutOfBorders(that) {\n    const { snakeBlocks, classic, gameOver } = that.state;\n    let dots = [...snakeBlocks];\n    let head = dots[dots.length - 1];\n\n    if (!classic) {\n      if (head[0] >= 100 || head[1] >= 100 || head[0] < 0 || head[1] < 0) {\n        if (!gameOver) {\n          that.setState({\n            gameOver: true,\n          });\n        }\n        return;\n      }\n    }\n}\n\nexport function classic(that) {\n  let flag = 0;\n  const { snakeBlocks, direction, classic } = that.state;\n  let dots = [...snakeBlocks];\n  let head = dots[dots.length - 1];\n  if (classic) {\n    if (direction === 'Right' && head[0] >= 98) {\n      head = [0, head[1]];\n      flag = 1;\n    } else if (direction === 'Left' && head[0] <= 0) {\n      head = [98, head[1]];\n      flag = 1;\n    } else if (direction === 'Down' && head[1] >= 98) {\n       head = [head[0], 0];\n       flag = 1;\n    } else if (direction === 'Up' && head[1] <= 0) {\n       head = [head[0], 98];\n       flag = 1;\n    }\n    dots.push(head);\n    dots.shift();\n\n    if (flag) {\n      that.setState({\n        snakeBlocks: dots,\n      })\n    }\n  }\n}\n\n\nexport function checkIfCollapsed(that) {\n    const { snakeBlocks, gameOver } = that.state;\n    let snake = [...snakeBlocks];\n    let head = snake[snake.length - 1];\n    snake.pop();\n    snake.forEach(dot => {\n      if (head[0] === dot[0] && head[1] === dot[1]) {\n        // that.onGameOver();\n        if(!gameOver)\n        that.setState({\n          gameOver: true,\n        })\n      }\n    })\n}\n\nexport function checkHighScore(that) {\n    const { score, classicHighestScore, arcadeHighestScore, classic } = that.state;\n    if (classic) {\n      if (score > classicHighestScore) {\n        that.setState({\n          classicHighestScore: score,\n        })\n      }\n    }\n\n    if (!classic) {\n      if (score > arcadeHighestScore) {\n        that.setState({\n          arcadeHighestScore: score,\n        })\n      }\n    }\n}\n\nexport function checkLevel(that) {\n    const { score } = that.state;\n\n    if (score >= 20) {\n      that.setState({level: 'Veteran'})\n    } else if (score >= 15) {\n      that.setState({level: 'Expert'})\n    } else if (score >= 10) {\n      that.setState({level: 'Amateur'})\n    } else if (score >= 5) {\n      that.setState({level: 'Beginner'})\n    }\n  }","import React from 'react';\nimport { NavBar } from '../Components';\nimport styles from './Layout.module.css';\n\nconst Layout = (props) => {\n    return (\n        <div>\n            <NavBar />\n            <main className={styles.Content}>\n                {props.children}\n            </main>\n        </div>\n    );\n};\n\nexport default Layout;","import React, {Component} from 'react';\nimport { Snake, Food } from '../../Components';\nimport { getRandomCoordinates }  from '../../libs/utils';\nimport { checkIfOutOfBorders, checkIfCollapsed, checkHighScore, classic } from './Utils/GameRules';\nimport { checkIfEat } from './Utils/Food';\nimport { moveSnake, onKeyDown } from './Utils/Snake';\nimport Layout from '../../Layout/Layout';\n\nconst initialState = {\n  level: 'Noob',\n  direction: 'Right',\n  speed: 200,\n  score: 0,\n  arcadeHighestScore: localStorage.arcadeHighestScore || 0,\n  classicHighestScore: localStorage.classicHighestScore || 0, \n  food: getRandomCoordinates(),\n  bonusFood: [-2, -2],\n  snakeBlocks: [\n    [0,0],\n    [2,0],\n    [4,0],\n    [6,0],\n    [8,0],\n    [10,0]\n  ],\n  gameOver: false,\n  classic: false,\n}\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n  }\n\n  componentWillMount() {\n      const { mode } = this.props.match.params;\n      if (mode === 'classic') {\n          this.setState({\n              classic: true,\n          })\n      }\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => moveSnake(this), this.state.speed);\n    window.onkeydown = event => onKeyDown(event, this);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  componentDidUpdate() {\n    const { score } = this.state;\n    classic(this);\n    checkIfOutOfBorders(this);\n    checkIfCollapsed(this);\n    checkIfEat(this);\n    checkHighScore(this);\n    if (score%2 === 0) {\n      clearInterval(this.interval);\n      this.interval = setInterval(() => moveSnake(this), this.state.speed);\n    }\n  }\n\n  onGameOver() {\n    const { classicHighestScore, arcadeHighestScore, classic } = this.state;\n    if (classic) {\n      localStorage.setItem('classicHighestScore', classicHighestScore);\n      initialState.classicHighestScore = classicHighestScore;\n    } else {\n      localStorage.setItem('arcadeHighestScore', arcadeHighestScore);\n      initialState.arcadeHighestScore = arcadeHighestScore;\n    }\n    this.setState(initialState);\n  }\n\n  renderGameOver = () => {\n    if (!this.state.gameOver) {\n      return null;\n    }\n    return (\n      <div style={{display: 'flex', flexDirection: 'column',color: 'white', position: 'relative', marginTop: '30%'}}>\n        <h1 style={{ display: 'flex', justifyContent: 'space-around', color: '#53f6c7', fontSize: '3rem'}}>Game Over</h1>\n        <div style={{display: 'flex', justifyContent: 'space-around'}}>\n          <button className=\"ModeButton\" onClick={() => {\n              this.setState({classic: false});\n              this.onGameOver();\n            }}\n          >\n            Arcade\n          </button>\n          <button className=\"ModeButton\" onClick={() => {\n              this.onGameOver();\n              this.setState({classic: true});\n            }}\n          >\n            Classic\n          </button>\n        </div>\n      </div>\n    )\n  }\n\n  render() {\n    const { snakeBlocks, food, bonusFood, score, classicHighestScore, arcadeHighestScore, level, gameOver, classic } = this.state;\n    \n    return (\n      <>\n        <Layout>\n          <div className=\"game-area\">\n            {!gameOver\n              ? (\n                <>\n                  <Snake snakeBlocks={snakeBlocks} />\n                  <Food dot={food} color=\"red\" />\n                  {(score%10===0 && score>2) ? <Food color=\"yellow\" dot={bonusFood} /> : null}\n                </>\n              )\n              : this.renderGameOver()\n              }\n          </div>\n          <div style={{color: '#53f6c7', position: 'relative', margin: '2px auto', width: '500px', display: 'flex', justifyContent: 'space-between'}}>\n            <h3>Score: {score}</h3>\n            <h3>High Score: {classic ? classicHighestScore : arcadeHighestScore}</h3>\n            <h3>Level: {level}</h3>\n          </div>\n        </Layout>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport Layout from '../../Layout/Layout';\n\nconst Mainpage = (props) => {\n\n    const handleArcadeMode = () => {\n        props.history.push('/play/arcade');\n    }\n\n    const handleClassicMode = () => {\n        props.history.push('/play/classic');\n    }\n    \n    return (\n        <Layout>    \n            <div className=\"game-area\">\n                <div style={{display: 'flex', flexDirection: 'column',color: 'white', position: 'relative', marginTop: '30%'}}>\n                    <h1 style={{ display: 'flex', justifyContent: 'space-around', color: '#53f6c7', fontSize: '3rem'}}>\n                        Play Game\n                    </h1>\n                    <div style={{display: 'flex', justifyContent: 'space-around'}}>\n                        <button className=\"ModeButton\" onClick={handleArcadeMode}>\n                            Arcade\n                        </button>\n                        <button className=\"ModeButton\" onClick={handleClassicMode}>\n                            Classic\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </Layout>\n    );\n}\n\nexport default Mainpage;","import React, { Component } from 'react';\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\nimport { PlayGame, MainPage } from './Pages';\n\nclass App extends Component {\n  render () {\n    return (\n      <div>\n        <BrowserRouter>        \n          <Switch>\n            <Route path={`/play/:mode`} component={PlayGame} />\n            <Route path=\"/\" component={MainPage} />\n          </Switch>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}