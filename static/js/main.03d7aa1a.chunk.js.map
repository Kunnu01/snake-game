{"version":3,"sources":["Components/Snake/Snake.js","Components/Food/Food.js","libs/utils.js","App.js","serviceWorker.js","index.js","Components/Snake/Snake.module.css","Components/Food/Food.module.css"],"names":["Snake","props","snakeDots","react_default","a","createElement","map","dot","index","style","left","concat","top","className","classes","Snake_dot","key","Food","background","color","Snake_food","getRandomCoordinates","Math","floor","random","initialState","level","direction","speed","score","highScore","localStorage","highestScore","food","bonusFood","gameOver","classic","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onKeyDown","e","window","event","state","keyCode","setState","checkLevel","moveSnake","_this$state","dots","toConsumableArray","head","length","push","shift","generateFood","snake","forEach","checkHighScore","_this$state2","renderGameOver","display","flexDirection","position","marginTop","justifyContent","fontSize","onClick","onGameOver","removeItem","interval","setInterval","document","onkeydown","clearInterval","checkIfOutOfBorders","checkIfCollapsed","checkIfEat","i","_this$state3","shortenSnake","enlargeSnake","_this$state4","enlargedSnake","unshift","_this2","_this$state5","pop","_this$state6","setItem","_this$state7","Fragment","Components_Snake_Snake","Components_Food_Food","margin","width","Component","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","rotate","rotation"],"mappings":"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","file":"static/js/main.03d7aa1a.chunk.js","sourcesContent":["import React from 'react';\nimport classes from './Snake.module.css';\n\nconst Snake = (props) => {\n    const { snakeDots } = props;\n    return (\n        <div>\n            {snakeDots.map((dot, index) => {\n                const style = {\n                    left: `${dot[0]}%`,\n                    top: `${dot[1]}%`,\n                }\n                return (\n                    <div className={classes.Snake_dot} key={index} style={style}></div>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default Snake;","import React from 'react'\nimport classes from './Food.module.css';\n\nconst Food = (props) => {\n    const style = {\n        background: `${props.color}`,\n        left: `${props.dot[0]}%`,\n        top: `${props.dot[1]}%`,\n    }\n    return (\n        <div className={classes.Snake_food} style={style}></div>\n    )\n}\n\nexport default Food;","export const getRandomCoordinates = () => {\n    let min = 1;\n    let max = 98;\n    let x = Math.floor((Math.random()*(max-min+1)+min)/2)*2;\n    let y = Math.floor((Math.random()*(max-min+1)+min)/2)*2;\n    return [x,y];\n}","/* eslint-disable default-case */\nimport React, {Component} from 'react';\nimport { Snake, Food } from './Components';\nimport { getRandomCoordinates }  from './libs/utils';\n\nconst initialState = {\n  level: 'Noob',\n  direction: 'Right',\n  speed: 200,\n  score: 0,\n  highScore: localStorage.highestScore || 0,\n  food: getRandomCoordinates(),\n  bonusFood: getRandomCoordinates(),\n  snakeDots: [\n    [0,0],\n    [2,0],\n    [4,0],\n    [6,0],\n    [8,0],\n    [10,0]\n  ],\n  gameOver: false,\n  classic: false,\n}\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n  }\n\n  componentDidMount() {\n    localStorage.removeItem('highestScore');\n    this.interval = setInterval(this.moveSnake, this.state.speed);\n    document.onkeydown = this.onKeyDown;\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  componentDidUpdate() {\n    const { score } = this.state;\n    this.checkIfOutOfBorders();\n    this.checkIfCollapsed();\n    this.checkIfEat();\n    this.checkHighScore();\n    if (score%2 === 0) {\n      clearInterval(this.interval);\n      this.interval = setInterval(this.moveSnake, this.state.speed);\n    }\n  }\n\n  onKeyDown = (e) => {\n    e = e || window.event;\n    const { direction } = this.state;\n\n    switch (e.keyCode) {\n      case 38:\n        if (direction !== 'Down')\n          this.setState({direction: 'Up'});\n        break;\n      case 40:\n        if (direction !== 'Up')\n          this.setState({direction: 'Down'});\n        break;\n      case 37:\n        if (direction !== 'Right')\n          this.setState({direction: 'Left'});\n        break;\n      case 39:\n        if (direction !== 'Left')\n          this.setState({direction: 'Right'});\n        break;\n    }\n  }\n\n  checkLevel = () => {\n    const { score } = this.state;\n\n    if (score === 6) {\n      this.setState({level: 'Veteran'})\n    } else if (score > 6) {\n      this.setState({level: 'Expert'})\n    } else if (score > 4) {\n      this.setState({level: 'Amateur'})\n    } else if (score > 2) {\n      this.setState({level: 'Beginner'})\n    }\n  }\n\n  shortenSnake() {\n    const { snakeDots } = this.state;\n\n  for (let i = 0; i <= 3; i++) {\n      snakeDots.shift();\n  }\n  this.setState({snakeDots});\n  }\n\n  moveSnake = () => {\n    const { snakeDots, direction } = this.state;\n    let dots = [...snakeDots];\n    let head = dots[dots.length - 1];\n\n    switch(direction) {\n      case 'Right':\n        head = [head[0]+2, head[1]];\n        break;\n      case 'Left':\n        head = [head[0]-2, head[1]];\n        break;\n      case 'Down':\n        head = [head[0], head[1]+2];\n        break;\n      case 'Up':\n        head = [head[0], head[1]-2];\n        break;\n    }\n    dots.push(head);\n    dots.shift();\n    this.setState({\n      snakeDots: dots,\n    })\n  }\n\n  generateFood = () => {\n    const { snakeDots } = this.state;\n    const snake = [...snakeDots];\n    let food = getRandomCoordinates();\n    snake.forEach(dot => {\n      if(food[0] === dot[0] && food[1] === dot[1]) {\n        food = getRandomCoordinates();\n      }\n    });\n    return food;\n  }\n\n  checkIfEat() {\n    const { snakeDots, food, bonusFood, score } = this.state;\n    let head = snakeDots[snakeDots.length - 1];\n    if (head[0] === bonusFood[0] && head[1] === bonusFood[1]) {\n      this.setState({\n        bonusFood: this.generateFood(),\n        score: score+3,\n      });\n      this.shortenSnake()\n    }\n    if (head[0] === food[0] && head[1] === food[1]) {\n      this.setState({\n        food: this.generateFood(),\n        bonusFood: this.generateFood(),\n      });\n      this.enlargeSnake();\n    }\n  }\n\n  enlargeSnake() {\n    const { snakeDots, score, speed } = this.state;\n    let enlargedSnake = [...snakeDots];\n    enlargedSnake.unshift([]);\n    this.setState({\n      snakeDots: [...enlargedSnake],\n      speed: (speed>20 && score%2===0) ? speed-20 : speed,\n      score: score+1,\n    });\n    this.checkLevel();\n  }\n  \n  checkIfCollapsed() {\n    const { snakeDots, gameOver } = this.state;\n    let snake = [...snakeDots];\n    let head = snake[snake.length - 1];\n    snake.pop();\n    snake.forEach(dot => {\n      if (head[0] === dot[0] && head[1] === dot[1]) {\n        // this.onGameOver();\n        if(!gameOver)\n        this.setState({\n          gameOver: true,\n        })\n      }\n    })\n  }\n\n  checkIfOutOfBorders() {\n    const { snakeDots, direction, classic, gameOver } = this.state;\n    let dots = [...snakeDots];\n    let head = dots[dots.length - 1];\n\n    // let head = snakeDots[snakeDots.length-1];\n    if (head[0] >= 100 || head[1] >= 100 || head[0] < 0 || head[1] < 0) {\n      if (!classic) {\n        if (!gameOver) {\n          this.setState({\n            gameOver: true,\n          });\n        }\n        return;\n      }\n\n      if (direction === 'Right') {\n        head = [head[0]-100, head[1]];\n      } else if (direction === 'Left') {\n        head = [head[0]+100, head[1]];\n      } else if (direction === 'Down') {\n        head = [head[0], head[1]-100];\n      } else if (direction === 'Up') {\n        head = [head[0], head[1]+100];\n      }\n\n      dots.push(head);\n      dots.shift();\n      this.setState({\n        snakeDots: dots,\n      })\n    }\n  }\n\n  checkHighScore = () => {\n    const { score, highScore } = this.state;\n    if (score > highScore) {\n      this.setState({\n        highScore: score,\n      });\n    }\n  }\n\n  onGameOver() {\n    const { highScore } = this.state;\n    localStorage.setItem('highestScore', highScore);\n    initialState.highScore = highScore;\n    this.setState(initialState);\n  }\n\n  renderGameOver = () => {\n    if (!this.state.gameOver) {\n      return null;\n    }\n    return (\n      <div style={{display: 'flex', flexDirection: 'column',color: 'white', position: 'relative', marginTop: '30%'}}>\n        <h1 style={{ display: 'flex', justifyContent: 'space-around', color: '#53f6c7', fontSize: '3rem'}}>Game Over</h1>\n        <div style={{display: 'flex', justifyContent: 'space-around'}}>\n          <button className=\"ModeButton\" onClick={() => {\n              this.onGameOver()\n              this.setState({classic: false})\n            }}\n          >\n            Arcade\n          </button>\n          <button className=\"ModeButton\" onClick={() => {\n              this.onGameOver()\n              this.setState({classic: true});\n            }}\n          >\n            Classic\n          </button>\n        </div>\n      </div>\n    )\n  }\n\n  render() {\n    const { snakeDots, food, bonusFood, score, highScore, level, gameOver } = this.state;\n    \n    return (\n      <>\n        <div className=\"game-area\">\n          {!gameOver\n            ? (\n              <>\n                <Snake snakeDots={snakeDots} />\n                <Food dot={food} color=\"red\" />\n                {(score%8===0 && score>1) ? <Food color=\"yellow\" dot={bonusFood} /> : null}\n              </>\n            )\n            : this.renderGameOver()\n            }\n        </div>\n        <div style={{color: '#53f6c7', position: 'relative', margin: '2px auto', width: '500px', display: 'flex', justifyContent: 'space-between'}}>\n          <h3>Score: {score}</h3>\n          <h3>High Score: {highScore}</h3>\n          <h3>Level: {level}</h3>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Snake_dot\":\"Snake_Snake_dot__30Fav\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Snake_food\":\"Food_Snake_food__2i1Lt\",\"rotate\":\"Food_rotate__3lwpo\",\"rotation\":\"Food_rotation__1J3y1\"};"],"sourceRoot":""}