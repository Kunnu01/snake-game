{"version":3,"sources":["Components/Snake/Snake.js","Components/Food/Food.js","libs/utils.js","App.js","serviceWorker.js","index.js","Components/Snake/Snake.module.css","Components/Food/Food.module.css"],"names":["Snake","props","snakeDots","react_default","a","createElement","map","dot","index","style","left","concat","top","className","classes","Snake_dot","key","Food","background","color","Snake_food","getRandomCoordinates","Math","floor","random","initialState","level","direction","speed","score","highScore","localStorage","highestScore","food","bonusFood","gameOver","classic","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onKeyDown","e","window","event","state","keyCode","setState","checkLevel","moveSnake","_this$state","dots","toConsumableArray","head","length","push","shift","checkHighScore","_this$state2","renderGameOver","position","onClick","onGameOver","removeItem","interval","setInterval","document","onkeydown","clearInterval","checkIfOutOfBorders","checkIfCollapsed","checkIfEat","_this$state3","enlargeSnake","_this$state4","enlargedSnake","unshift","_this2","_this$state5","snake","pop","forEach","_this$state6","setItem","_this$state7","Fragment","Components_Snake_Snake","Components_Food_Food","margin","width","display","justifyContent","Component","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","rotate","rotation"],"mappings":"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","file":"static/js/main.952cd95b.chunk.js","sourcesContent":["import React from 'react';\r\nimport classes from './Snake.module.css';\r\n\r\nconst Snake = (props) => {\r\n    const { snakeDots } = props;\r\n    return (\r\n        <div>\r\n            {snakeDots.map((dot, index) => {\r\n                const style = {\r\n                    left: `${dot[0]}%`,\r\n                    top: `${dot[1]}%`,\r\n                }\r\n                return (\r\n                    <div className={classes.Snake_dot} key={index} style={style}></div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Snake;","import React from 'react'\r\nimport classes from './Food.module.css';\r\n\r\nconst Food = (props) => {\r\n    const style = {\r\n        background: `${props.color}`,\r\n        left: `${props.dot[0]}%`,\r\n        top: `${props.dot[1]}%`,\r\n    }\r\n    return (\r\n        <div className={classes.Snake_food} style={style}></div>\r\n    )\r\n}\r\n\r\nexport default Food;","export const getRandomCoordinates = () => {\r\n    let min = 1;\r\n    let max = 98;\r\n    let x = Math.floor((Math.random()*(max-min+1)+min)/2)*2;\r\n    let y = Math.floor((Math.random()*(max-min+1)+min)/2)*2;\r\n    return [x,y];\r\n}","/* eslint-disable default-case */\r\nimport React, {Component} from 'react';\r\nimport { Snake, Food } from './Components';\r\nimport { getRandomCoordinates }  from './libs/utils';\r\n\r\nconst initialState = {\r\n  level: 'Noob',\r\n  direction: 'Right',\r\n  speed: 200,\r\n  score: 0,\r\n  highScore: localStorage.highestScore || 0,\r\n  food: getRandomCoordinates(),\r\n  bonusFood: getRandomCoordinates(),\r\n  snakeDots: [\r\n    [0,0],\r\n    [2,0],\r\n  ],\r\n  gameOver: false,\r\n  classic: false,\r\n}\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = initialState;\r\n  }\r\n\r\n  componentDidMount() {\r\n    localStorage.removeItem('highestScore');\r\n    this.interval = setInterval(this.moveSnake, this.state.speed);\r\n    document.onkeydown = this.onKeyDown;\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const { score } = this.state;\r\n    this.checkIfOutOfBorders();\r\n    this.checkIfCollapsed();\r\n    this.checkIfEat();\r\n    this.checkHighScore();\r\n    if (score%2 === 0) {\r\n      clearInterval(this.interval);\r\n      this.interval = setInterval(this.moveSnake, this.state.speed);\r\n    }\r\n  }\r\n\r\n  onKeyDown = (e) => {\r\n    e = e || window.event;\r\n    const { direction } = this.state;\r\n\r\n    switch (e.keyCode) {\r\n      case 38:\r\n        if (direction !== 'Down')\r\n          this.setState({direction: 'Up'});\r\n        break;\r\n      case 40:\r\n        if (direction !== 'Up')\r\n          this.setState({direction: 'Down'});\r\n        break;\r\n      case 37:\r\n        if (direction !== 'Right')\r\n          this.setState({direction: 'Left'});\r\n        break;\r\n      case 39:\r\n        if (direction !== 'Left')\r\n          this.setState({direction: 'Right'});\r\n        break;\r\n    }\r\n  }\r\n\r\n  checkLevel = () => {\r\n    const { score } = this.state;\r\n\r\n    if (score > 6) {\r\n      this.setState({level: 'Veteran'})\r\n    } else if (score > 6) {\r\n      this.setState({level: 'Expert'})\r\n    } else if (score > 4) {\r\n      this.setState({level: 'Amateur'})\r\n    } else if (score > 2) {\r\n      this.setState({level: 'Beginner'})\r\n    }\r\n  }\r\n\r\n  moveSnake = () => {\r\n    const { snakeDots, direction } = this.state;\r\n    let dots = [...snakeDots];\r\n    let head = dots[dots.length - 1];\r\n\r\n    switch(direction) {\r\n      case 'Right':\r\n        head = [head[0]+2, head[1]];\r\n        break;\r\n      case 'Left':\r\n        head = [head[0]-2, head[1]];\r\n        break;\r\n      case 'Down':\r\n        head = [head[0], head[1]+2];\r\n        break;\r\n      case 'Up':\r\n        head = [head[0], head[1]-2];\r\n        break;\r\n    }\r\n    dots.push(head);\r\n    dots.shift();\r\n    this.setState({\r\n      snakeDots: dots,\r\n    })\r\n  }\r\n\r\n  checkIfEat() {\r\n    const { snakeDots, food, bonusFood, score } = this.state;\r\n    let head = snakeDots[snakeDots.length - 1];\r\n    if (head[0] === bonusFood[0] && head[1] === bonusFood[1]) {\r\n      this.setState({\r\n        bonusFood: getRandomCoordinates(),\r\n        score: score+3,\r\n      })\r\n    }\r\n    if (head[0] === food[0] && head[1] === food[1]) {\r\n      this.setState({\r\n        food: getRandomCoordinates(),\r\n        bonusFood: getRandomCoordinates(),\r\n      });\r\n      this.enlargeSnake();\r\n    }\r\n  }\r\n\r\n  enlargeSnake() {\r\n    const { snakeDots, score, speed } = this.state;\r\n    let enlargedSnake = [...snakeDots];\r\n    enlargedSnake.unshift([]);\r\n    this.setState({\r\n      snakeDots: [...enlargedSnake],\r\n      speed: (speed>10 && score%2===0) ? speed-10 : speed,\r\n      score: score+1,\r\n    });\r\n    this.checkLevel();\r\n  }\r\n  \r\n  checkIfCollapsed() {\r\n    const { snakeDots, gameOver } = this.state;\r\n    let snake = [...snakeDots];\r\n    let head = snake[snake.length - 1];\r\n    snake.pop();\r\n    snake.forEach(dot => {\r\n      if (head[0] === dot[0] && head[1] === dot[1]) {\r\n        // this.onGameOver();\r\n        if(!gameOver)\r\n        this.setState({\r\n          gameOver: true,\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  checkIfOutOfBorders() {\r\n    const { snakeDots, direction, classic, gameOver } = this.state;\r\n    let dots = [...snakeDots];\r\n    let head = dots[dots.length - 1];\r\n\r\n    // let head = snakeDots[snakeDots.length-1];\r\n    if (head[0] >= 100 || head[1] >= 100 || head[0] < 0 || head[1] < 0) {\r\n      if (!classic) {\r\n        if (!gameOver) {\r\n          this.setState({\r\n            gameOver: true,\r\n          });\r\n        }\r\n        return;\r\n      }\r\n\r\n      if (direction === 'Right') {\r\n        head = [head[0]-100, head[1]];\r\n      } else if (direction === 'Left') {\r\n        head = [head[0]+100, head[1]];\r\n      } else if (direction === 'Down') {\r\n        head = [head[0], head[1]-100];\r\n      } else if (direction === 'Up') {\r\n        head = [head[0], head[1]+100];\r\n      }\r\n\r\n      dots.push(head);\r\n      dots.shift();\r\n      this.setState({\r\n        snakeDots: dots,\r\n      })\r\n    }\r\n  }\r\n\r\n  checkHighScore = () => {\r\n    const { score, highScore } = this.state;\r\n    if (score > highScore) {\r\n      this.setState({\r\n        highScore: score,\r\n      });\r\n    }\r\n  }\r\n\r\n  onGameOver() {\r\n    const { highScore } = this.state;\r\n    localStorage.setItem('highestScore', highScore);\r\n    initialState.highScore = highScore;\r\n    this.setState(initialState);\r\n  }\r\n\r\n  renderGameOver = () => {\r\n    if (!this.state.gameOver) {\r\n      return null;\r\n    }\r\n    return (\r\n      <div style={{position: 'relative', top: '35%', left: '30%'}}>\r\n        <h1>Game Over</h1>\r\n        <button onClick={() => {\r\n            this.onGameOver()\r\n            this.setState({classic: false})\r\n          }}\r\n        >\r\n          Acrade\r\n        </button>\r\n        <button onClick={() => {\r\n            this.onGameOver()\r\n            this.setState({classic: true});\r\n          }}\r\n        >\r\n          Classic\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  render() {\r\n    const { snakeDots, food, bonusFood, score, highScore, level, gameOver } = this.state;\r\n    return (\r\n      <>\r\n        <div className=\"game-area\">\r\n          {!gameOver\r\n            ? (\r\n              <>\r\n                <Snake snakeDots={snakeDots} />\r\n                <Food dot={food} color=\"red\" />\r\n                {(score%8===0 && score>1) ? <Food color=\"yellow\" dot={bonusFood} /> : null}\r\n              </>\r\n            )\r\n            : this.renderGameOver()\r\n            }\r\n        </div>\r\n        <div style={{position: 'relative', margin: '2px auto', width: '500px', display: 'flex', justifyContent: 'space-between'}}>\r\n          <h4>Score: {score}</h4>\r\n          <h4>High Score: {highScore}</h4>\r\n          <h4>Level: {level}</h4>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Snake_dot\":\"Snake_Snake_dot__1IrnS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Snake_food\":\"Food_Snake_food__3CgtS\",\"rotate\":\"Food_rotate__3hek5\",\"rotation\":\"Food_rotation__3zzKb\"};"],"sourceRoot":""}